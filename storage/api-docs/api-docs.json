{
    "openapi": "3.0.0",
    "info": {
        "title": "Mon API",
        "description": "Documentation de l'API avec Swagger",
        "contact": {
            "email": "contact@exemple.com"
        },
        "version": "1.0.0"
    },
    "paths": {
        "/api/register": {
            "post": {
                "tags": [
                    "Authentification"
                ],
                "summary": "Enregistrer un nouvel utilisateur",
                "operationId": "8a56853624e025573120a09a4c75d468",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "first_name",
                                    "last_name",
                                    "email",
                                    "phone",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "first_name": {
                                        "type": "string",
                                        "example": "John"
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "example": "Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john.doe@example.com"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "+123456789"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "secret123"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "secret123"
                                    },
                                    "role_id": {
                                        "type": "integer",
                                        "example": 2
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Inscription réussie",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "first_name": {
                                                    "type": "string",
                                                    "example": "John"
                                                },
                                                "last_name": {
                                                    "type": "string",
                                                    "example": "Doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "john.doe@example.com"
                                                },
                                                "phone": {
                                                    "type": "string",
                                                    "example": "+123456789"
                                                },
                                                "role_id": {
                                                    "type": "integer",
                                                    "example": 2
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "eyJ0eXAiOiJKV1QiLC..."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Données invalides"
                    }
                }
            }
        },
        "/api/login": {
            "post": {
                "tags": [
                    "Authentification"
                ],
                "summary": "Connexion d'un utilisateur",
                "operationId": "a3b306d14572d1f4bd6c064b3233e7b8",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "login",
                                    "password"
                                ],
                                "properties": {
                                    "login": {
                                        "type": "string",
                                        "example": "john.doe@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "secret123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Connexion réussie (sans 2FA)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "first_name": {
                                                    "type": "string",
                                                    "example": "John"
                                                },
                                                "last_name": {
                                                    "type": "string",
                                                    "example": "Doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "john.doe@example.com"
                                                },
                                                "phone": {
                                                    "type": "string",
                                                    "example": "+123456789"
                                                },
                                                "role_id": {
                                                    "type": "integer",
                                                    "example": 2
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "eyJ0eXAiOiJKV1QiLC..."
                                        },
                                        "token_expiration": {
                                            "type": "string",
                                            "example": "2025-04-17 10:45:00"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "202": {
                        "description": "Connexion avec OTP requis",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "OTP requis"
                                        },
                                        "user_id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "first_name": {
                                            "type": "string",
                                            "example": "John"
                                        },
                                        "last_name": {
                                            "type": "string",
                                            "example": "Doe"
                                        },
                                        "phone": {
                                            "type": "string",
                                            "example": "+123456789"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Identifiants invalides",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid credentials"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Utilisateur inactif",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "User is inactive"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/verify-otp": {
            "post": {
                "tags": [
                    "Authentification"
                ],
                "summary": "Vérification du code OTP pour l'authentification à deux facteurs",
                "operationId": "7809ddcd47cab2525ccd43d1c2031bfd",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "login",
                                    "otp"
                                ],
                                "properties": {
                                    "login": {
                                        "type": "string",
                                        "example": "john.doe@example.com"
                                    },
                                    "otp": {
                                        "type": "string",
                                        "example": "123456"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OTP valide, authentification réussie",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "first_name": {
                                                    "type": "string",
                                                    "example": "John"
                                                },
                                                "last_name": {
                                                    "type": "string",
                                                    "example": "Doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "john.doe@example.com"
                                                },
                                                "phone": {
                                                    "type": "string",
                                                    "example": "+123456789"
                                                },
                                                "role_id": {
                                                    "type": "integer",
                                                    "example": 2
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "eyJ0eXAiOiJKV1QiLC..."
                                        },
                                        "token_expiration": {
                                            "type": "string",
                                            "example": "2025-04-17 10:45:00"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "OTP invalide ou expiré",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid or expired OTP"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Utilisateur introuvable",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "User not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/me": {
            "get": {
                "tags": [
                    "Authentification"
                ],
                "summary": "Récupérer les informations de l'utilisateur authentifié",
                "operationId": "9d9bc556f927575aa492a88c28fe5908",
                "responses": {
                    "200": {
                        "description": "Informations de l'utilisateur récupérées avec succès",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "first_name": {
                                                    "type": "string",
                                                    "example": "John"
                                                },
                                                "last_name": {
                                                    "type": "string",
                                                    "example": "Doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "john.doe@example.com"
                                                },
                                                "phone": {
                                                    "type": "string",
                                                    "example": "+123456789"
                                                },
                                                "role_id": {
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "bank_cards": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "card_number": {
                                                                "type": "string",
                                                                "example": "1234567890123456"
                                                            },
                                                            "expiry_date": {
                                                                "type": "string",
                                                                "example": "12/24"
                                                            },
                                                            "cvv": {
                                                                "type": "string",
                                                                "example": "123"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "wishlists": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "listing_id": {
                                                                "type": "integer",
                                                                "example": 12
                                                            },
                                                            "created_at": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "example": "2025-04-24T11:33:12"
                                                            },
                                                            "listing": {
                                                                "properties": {
                                                                    "id": {
                                                                        "type": "integer",
                                                                        "example": 12
                                                                    },
                                                                    "title": {
                                                                        "type": "string",
                                                                        "example": "Yamaha R6 2020"
                                                                    },
                                                                    "price": {
                                                                        "type": "number",
                                                                        "format": "float",
                                                                        "example": 68000
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "listings": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 18
                                                            },
                                                            "title": {
                                                                "type": "string",
                                                                "example": "Honda CBR 600RR"
                                                            },
                                                            "price": {
                                                                "type": "number",
                                                                "format": "float",
                                                                "example": 72000
                                                            },
                                                            "status": {
                                                                "type": "string",
                                                                "example": "active"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "auction_histories_as_seller": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 5
                                                            },
                                                            "bid_amount": {
                                                                "type": "number",
                                                                "format": "float",
                                                                "example": 60000
                                                            },
                                                            "bid_date": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "example": "2025-04-23T10:45:00"
                                                            },
                                                            "listing": {
                                                                "properties": {
                                                                    "id": {
                                                                        "type": "integer",
                                                                        "example": 18
                                                                    },
                                                                    "title": {
                                                                        "type": "string",
                                                                        "example": "Honda CBR 600RR"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "auction_histories_as_buyer": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 9
                                                            },
                                                            "bid_amount": {
                                                                "type": "number",
                                                                "format": "float",
                                                                "example": 65000
                                                            },
                                                            "bid_date": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "example": "2025-04-23T14:15:00"
                                                            },
                                                            "listing": {
                                                                "properties": {
                                                                    "id": {
                                                                        "type": "integer",
                                                                        "example": 21
                                                                    },
                                                                    "title": {
                                                                        "type": "string",
                                                                        "example": "Kawasaki Ninja 400"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Utilisateur non authentifié",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/logout": {
            "post": {
                "tags": [
                    "Authentification"
                ],
                "summary": "Déconnexion de l'utilisateur",
                "operationId": "fe8f3429cd6979b3b4517e186505f9f9",
                "responses": {
                    "200": {
                        "description": "Déconnexion réussie",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Déconnexion réussie"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Erreur serveur"
                    }
                }
            }
        },
        "/api/refresh": {
            "post": {
                "tags": [
                    "Authentification"
                ],
                "summary": "Rafraîchir le token JWT",
                "operationId": "2c27d311a2876560fcb5a754b556cdc5",
                "responses": {
                    "200": {
                        "description": "Token rafraîchi avec succès",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "token": {
                                            "type": "string",
                                            "example": "eyJ0eXAiOiJKV1QiLC..."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Token invalide ou expiré",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Token expired or invalid"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/user/update": {
            "put": {
                "tags": [
                    "Authentification"
                ],
                "summary": "Mettre à jour le profil de l'utilisateur",
                "operationId": "89ec70688080b1a0c14c7f4fcb01c1f4",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "first_name": {
                                        "type": "string",
                                        "example": "John"
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "example": "Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john.doe@example.com"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "+123456789"
                                    },
                                    "birthday": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "1990-05-15"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Profil mis à jour",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Profile updated successfully"
                                        },
                                        "user": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Données invalides"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/user/two-factor-toggle": {
            "put": {
                "tags": [
                    "Authentification"
                ],
                "summary": "Enable or disable two-factor authentication",
                "description": "Toggles two-factor auth for the authenticated user",
                "operationId": "toggleTwoFactor",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Two-factor authentication enabled."
                                        },
                                        "two_factor_enabled": {
                                            "type": "boolean",
                                            "example": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/bike-part-brands": {
            "get": {
                "tags": [
                    "Bike Part Brands"
                ],
                "summary": "Get all bike part brands",
                "operationId": "4084f52f749b5a8426f5a064b8ad12e2",
                "responses": {
                    "200": {
                        "description": "List of brands"
                    }
                }
            },
            "post": {
                "tags": [
                    "Bike Part Brands"
                ],
                "summary": "Create a new bike part brand",
                "operationId": "5f93afc5f40009b6070036ceb59f3904",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Shimano"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Brand created successfully"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/bike-part-brands/{id}": {
            "get": {
                "tags": [
                    "Bike Part Brands"
                ],
                "summary": "Get a specific bike part brand",
                "operationId": "80864c6c3152868f81b11f4991a88aab",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Brand found"
                    },
                    "404": {
                        "description": "Brand not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Bike Part Brands"
                ],
                "summary": "Update a bike part brand",
                "operationId": "a89634c7797aa73912d79d3dd125d851",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Updated Brand"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Brand updated successfully"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Bike Part Brands"
                ],
                "summary": "Delete a bike part brand",
                "operationId": "0150a8926c28e698c8a0969f815d2c20",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Brand deleted successfully"
                    },
                    "404": {
                        "description": "Brand not found"
                    }
                }
            }
        },
        "/api/bike-part-categories": {
            "get": {
                "tags": [
                    "Bike Part Categories"
                ],
                "summary": "Get all bike part categories",
                "description": "Display a listing of the resource.\nswagger",
                "operationId": "e1b0407e79465a85a6c11a7b1f0533cf",
                "responses": {
                    "200": {
                        "description": "List of categories"
                    }
                }
            },
            "post": {
                "tags": [
                    "Bike Part Categories"
                ],
                "summary": "Create a new bike part category",
                "description": "Store a newly created resource in storage.\nswagger",
                "operationId": "a9032b26435e6aef60f3fb730e26cce0",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Oil"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Category created successfully"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/bike-part-categories/{id}": {
            "get": {
                "tags": [
                    "Bike Part Categories"
                ],
                "summary": "Get a specific bike part category",
                "description": "Display the specified resource.\nswagger",
                "operationId": "f6625fb70785abbd9fed45b5798e41b7",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category found"
                    },
                    "404": {
                        "description": "Category not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Bike Part Categories"
                ],
                "summary": "Update a bike part category",
                "description": "Update the specified resource in storage.\nswagger",
                "operationId": "892574b696b8b4d5facbd063b0480496",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Oil"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Category updated successfully"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Bike Part Categories"
                ],
                "summary": "Delete a bike part category",
                "description": "Remove the specified resource from storage.\nswagger",
                "operationId": "5667b4358ec294aec2da9ca0d93507ac",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category deleted successfully"
                    },
                    "404": {
                        "description": "Category not found"
                    }
                }
            }
        },
        "/api/BankCards": {
            "get": {
                "tags": [
                    "BankCards"
                ],
                "summary": "Get all BankCards (Admin only)",
                "operationId": "e68c29d4d26f557a17b9e095146a4f0d",
                "responses": {
                    "200": {
                        "description": "List of BankCards"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/my-cards": {
            "get": {
                "tags": [
                    "BankCards"
                ],
                "summary": "Get authenticated user's cards",
                "operationId": "af74c31afb9229905aa329697bf611f3",
                "responses": {
                    "200": {
                        "description": "List of user's bank cards",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BankCard"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "BankCards"
                ],
                "summary": "Add a new card for the authenticated user",
                "operationId": "fec5900e84eda158df67dad987d7fe10",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "card_type_id"
                                ],
                                "properties": {
                                    "card_type_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "card_number": {
                                        "type": "string",
                                        "example": "1234 5678 9012 3456"
                                    },
                                    "card_holder_name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "expiration_date": {
                                        "description": "Format: MM/YY",
                                        "type": "string",
                                        "example": "12/25"
                                    },
                                    "cvv": {
                                        "type": "string",
                                        "example": "123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Card added successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bank card successfully added."
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/BankCard"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Card already exists"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/my-cards/{id}": {
            "put": {
                "tags": [
                    "BankCards"
                ],
                "summary": "Update user's card",
                "operationId": "b08e8c3ae4447a9673d44c8b293d7434",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Card ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "card_holder_name": {
                                        "type": "string",
                                        "example": "John Doe Updated"
                                    },
                                    "expiration_date": {
                                        "type": "string",
                                        "example": "12/25"
                                    },
                                    "cvv": {
                                        "type": "string",
                                        "example": "456"
                                    },
                                    "is_default": {
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Card updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BankCard"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Not authorized to update this card"
                    },
                    "404": {
                        "description": "Card not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "BankCards"
                ],
                "summary": "Delete user's card",
                "operationId": "5f1c13a1fb9c7989240d1b0ab2460f9b",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Card ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Card deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Card deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Not authorized to delete this card"
                    },
                    "404": {
                        "description": "Card not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/BankCards/{id}": {
            "get": {
                "tags": [
                    "BankCards"
                ],
                "summary": "Get BankCard by ID",
                "operationId": "a619b9cda83c954a3be2507121b083af",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "BankCard details"
                    },
                    "404": {
                        "description": "BankCard not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "BankCards"
                ],
                "summary": "Update BankCard (Admin only)",
                "operationId": "a65401dfc863d5335f41b711641ef234",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "New VIP BankCard"
                                    },
                                    "BankCard_type_id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "BankCard updated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "BankCards"
                ],
                "summary": "Delete BankCard (Admin only)",
                "operationId": "e391e402ce09c1cefda6e83740716372",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "BankCard deleted"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/my-cards/{id}/set-default": {
            "patch": {
                "tags": [
                    "BankCards"
                ],
                "summary": "Set a card as default for the user",
                "operationId": "0acd3375ae2edd2e99577c30bf812e59",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Card ID to set as default",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Card set as default successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Card set as default successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/BankCard"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Not authorized to update this card"
                    },
                    "404": {
                        "description": "Card not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/card-types": {
            "get": {
                "tags": [
                    "Card Types"
                ],
                "summary": "Get all card types",
                "operationId": "53e444235db6a199d405047921f88269",
                "responses": {
                    "200": {
                        "description": "List of card types",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "name": {
                                                "type": "string",
                                                "example": "Visa"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Card Types"
                ],
                "summary": "Create a new card type",
                "operationId": "105617dc31a6892db1dd00822a9f4b6b",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Visa"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Card type created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "Visa"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/card-types/{id}": {
            "get": {
                "tags": [
                    "Card Types"
                ],
                "summary": "Get a card type by ID",
                "operationId": "41bbaa5eb347b0f70f1bb6b293a9e589",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Card type found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "Visa"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Card type not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Card Types"
                ],
                "summary": "Update an existing card type",
                "operationId": "5fb058d35caa0167082c6f86a8833bfa",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "MasterCard"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Card type updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "MasterCard"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Card type not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Card Types"
                ],
                "summary": "Delete a card type",
                "operationId": "24575cfd80cc74e9b82c9910017c4f36",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Card type deleted"
                    },
                    "404": {
                        "description": "Card type not found"
                    }
                }
            }
        },
        "/api/categories": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Get all categories",
                "operationId": "3f5817a34833d0a1f4af4548dd3aeaba",
                "responses": {
                    "200": {
                        "description": "List of categories",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "name": {
                                                "type": "string",
                                                "example": "Electronics"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Categories"
                ],
                "summary": "Create a new category",
                "operationId": "71fcad552bb0eaba9fb191fd8d8dcab0",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Electronics"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Category created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "Electronics"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/categories/{id}": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Get a category by ID",
                "operationId": "c68e76d323c008827a9e47398b1583de",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "Electronics"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Category not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Categories"
                ],
                "summary": "Update an existing category",
                "operationId": "0e686b2748211cc688333ed705dc111f",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Home Appliances"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Category updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "Home Appliances"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Category not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Categories"
                ],
                "summary": "Delete a category",
                "operationId": "4c12e22a7f8c617bd83bfa1fdc05428d",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Category deleted"
                    },
                    "404": {
                        "description": "Category not found"
                    }
                }
            }
        },
        "/api/colors": {
            "get": {
                "tags": [
                    "Colors"
                ],
                "summary": "Get all colors",
                "operationId": "9af5ded8d7143a0f97e53725eda97464",
                "responses": {
                    "200": {
                        "description": "List of colors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "name": {
                                                "type": "string",
                                                "example": "Red"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Colors"
                ],
                "summary": "Create a new color",
                "operationId": "e4d3770c69f36a71c5936b3b35655342",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Blue"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Color created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "Blue"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/colors/{id}": {
            "get": {
                "tags": [
                    "Colors"
                ],
                "summary": "Get a color by ID",
                "operationId": "c0e5a39d91e5093e2e0f77823615db5a",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Color found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "Red"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Color not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Colors"
                ],
                "summary": "Update an existing color",
                "operationId": "717be7234f38d1fb4ff4678ba4f59581",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Green"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Color updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "Green"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Color not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Colors"
                ],
                "summary": "Delete a color",
                "operationId": "1667d6964960e3a8158e80e50c69f19c",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Color deleted"
                    },
                    "404": {
                        "description": "Color not found"
                    }
                }
            }
        },
        "/api/upload": {
            "post": {
                "tags": [
                    "Image Upload"
                ],
                "summary": "Upload multiple images",
                "description": "Allows users to upload multiple images to the server.",
                "operationId": "uploadImages",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "images[]"
                                ],
                                "properties": {
                                    "images[]": {
                                        "description": "Multiple image files to upload",
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "format": "binary"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Images uploaded successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Images uploaded successfully"
                                        },
                                        "paths": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "http://yourdomain.com/storage/listings/image1.jpg"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "No images found in request."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An error occurred while uploading images."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/listings": {
            "get": {
                "tags": [
                    "Listings"
                ],
                "summary": "Get all listings with pagination",
                "operationId": "8f9a3e0af2ef4de078f651d773cbefbb",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated list of listings",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "current_page": {
                                            "type": "integer"
                                        },
                                        "last_page": {
                                            "type": "integer"
                                        },
                                        "total": {
                                            "type": "integer"
                                        },
                                        "per_page": {
                                            "type": "integer"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer"
                                                    },
                                                    "title": {
                                                        "type": "string"
                                                    },
                                                    "description": {
                                                        "type": "string"
                                                    },
                                                    "price": {
                                                        "type": "number"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "city": {
                                                        "type": "string"
                                                    },
                                                    "country": {
                                                        "type": "string"
                                                    },
                                                    "images": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "wishlist": {
                                                        "type": "boolean"
                                                    },
                                                    "category_id": {
                                                        "type": "integer"
                                                    },
                                                    "motorcycle": {
                                                        "type": "object",
                                                        "nullable": true
                                                    },
                                                    "license_plate": {
                                                        "type": "object",
                                                        "nullable": true
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Listings"
                ],
                "summary": "Créer une annonce",
                "operationId": "cd50eb59f7c33efe74713b3a8eef96c7",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "oneOf": [
                                    {
                                        "required": [
                                            "title",
                                            "description",
                                            "price",
                                            "category_id",
                                            "brand_id",
                                            "model_id",
                                            "year_id"
                                        ],
                                        "properties": {
                                            "category_id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "title": {
                                                "type": "string",
                                                "example": "Yamaha MT-07"
                                            },
                                            "description": {
                                                "type": "string",
                                                "example": "Moto bien entretenue"
                                            },
                                            "price": {
                                                "type": "number",
                                                "format": "float",
                                                "example": 5000
                                            },
                                            "country_id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "city_id": {
                                                "type": "integer",
                                                "example": 10
                                            },
                                            "auction_enabled": {
                                                "type": "boolean",
                                                "example": false
                                            },
                                            "minimum_bid": {
                                                "type": "number",
                                                "example": null
                                            },
                                            "allow_submission": {
                                                "type": "boolean",
                                                "example": false
                                            },
                                            "listing_type_id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "contacting_channel": {
                                                "type": "string",
                                                "example": "phone"
                                            },
                                            "seller_type": {
                                                "type": "string",
                                                "example": "owner"
                                            },
                                            "images": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string",
                                                    "format": "binary"
                                                }
                                            },
                                            "brand_id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "model_id": {
                                                "type": "integer",
                                                "example": 2
                                            },
                                            "year_id": {
                                                "type": "integer",
                                                "example": 2020
                                            },
                                            "type_id": {
                                                "type": "integer",
                                                "example": 3
                                            },
                                            "engine": {
                                                "type": "string",
                                                "example": "700cc"
                                            },
                                            "mileage": {
                                                "type": "integer",
                                                "example": 15000
                                            },
                                            "body_condition": {
                                                "type": "string",
                                                "example": "Good"
                                            },
                                            "modified": {
                                                "type": "boolean",
                                                "example": false
                                            },
                                            "insurance": {
                                                "type": "boolean",
                                                "example": true
                                            },
                                            "general_condition": {
                                                "type": "string",
                                                "example": "Excellent"
                                            },
                                            "vehicle_care": {
                                                "type": "string",
                                                "example": "Regular maintenance"
                                            },
                                            "transmission": {
                                                "type": "string",
                                                "example": "Manual"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    {
                                        "required": [
                                            "title",
                                            "description",
                                            "price",
                                            "category_id",
                                            "condition"
                                        ],
                                        "properties": {
                                            "category_id": {
                                                "type": "integer",
                                                "example": 2
                                            },
                                            "title": {
                                                "type": "string",
                                                "example": "Pneu arrière"
                                            },
                                            "description": {
                                                "type": "string",
                                                "example": "Pneu en bon état"
                                            },
                                            "price": {
                                                "type": "number",
                                                "format": "float",
                                                "example": 200
                                            },
                                            "country_id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "city_id": {
                                                "type": "integer",
                                                "example": 5
                                            },
                                            "auction_enabled": {
                                                "type": "boolean",
                                                "example": false
                                            },
                                            "minimum_bid": {
                                                "type": "number",
                                                "example": null
                                            },
                                            "allow_submission": {
                                                "type": "boolean",
                                                "example": false
                                            },
                                            "listing_type_id": {
                                                "type": "integer",
                                                "example": 2
                                            },
                                            "contacting_channel": {
                                                "type": "string",
                                                "example": "email"
                                            },
                                            "seller_type": {
                                                "type": "string",
                                                "example": "dealer"
                                            },
                                            "images": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string",
                                                    "format": "binary"
                                                }
                                            },
                                            "condition": {
                                                "type": "string",
                                                "example": "used"
                                            },
                                            "motorcycles": {
                                                "type": "array",
                                                "items": {
                                                    "required": [
                                                        "brand_id",
                                                        "model_id",
                                                        "year_id"
                                                    ],
                                                    "properties": {
                                                        "brand_id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "model_id": {
                                                            "type": "integer",
                                                            "example": 2
                                                        },
                                                        "year_id": {
                                                            "type": "integer",
                                                            "example": 2020
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    },
                                    {
                                        "required": [
                                            "title",
                                            "description",
                                            "price",
                                            "category_id",
                                            "characters",
                                            "digits_count",
                                            "color_id"
                                        ],
                                        "properties": {
                                            "category_id": {
                                                "type": "integer",
                                                "example": 3
                                            },
                                            "title": {
                                                "type": "string",
                                                "example": "Plaque personnalisée"
                                            },
                                            "description": {
                                                "type": "string",
                                                "example": "Plaque ABC123 rouge"
                                            },
                                            "price": {
                                                "type": "number",
                                                "format": "float",
                                                "example": 800
                                            },
                                            "country_id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "city_id": {
                                                "type": "integer",
                                                "example": 8
                                            },
                                            "auction_enabled": {
                                                "type": "boolean",
                                                "example": true
                                            },
                                            "minimum_bid": {
                                                "type": "number",
                                                "example": 500
                                            },
                                            "allow_submission": {
                                                "type": "boolean",
                                                "example": true
                                            },
                                            "listing_type_id": {
                                                "type": "integer",
                                                "example": 3
                                            },
                                            "contacting_channel": {
                                                "type": "string",
                                                "example": "whatsapp"
                                            },
                                            "seller_type": {
                                                "type": "string",
                                                "example": "owner"
                                            },
                                            "images": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string",
                                                    "format": "binary"
                                                }
                                            },
                                            "first_letter": {
                                                "type": "string",
                                                "example": "A"
                                            },
                                            "second_letter": {
                                                "type": "string",
                                                "example": "B"
                                            },
                                            "third_letter": {
                                                "type": "string",
                                                "example": "C"
                                            },
                                            "digits_count": {
                                                "type": "integer",
                                                "example": 6
                                            },
                                            "color_id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "type_id": {
                                                "type": "integer",
                                                "example": 1
                                            }
                                        },
                                        "type": "object"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Annonce créée avec succès"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/listings/country/{country_id}": {
            "get": {
                "tags": [
                    "Listings"
                ],
                "summary": "Get listings by country",
                "operationId": "de654be482468b274c9b346c2eb652e4",
                "parameters": [
                    {
                        "name": "country_id",
                        "in": "path",
                        "description": "Country ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of listings",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer"
                                            },
                                            "title": {
                                                "type": "string"
                                            },
                                            "description": {
                                                "type": "string"
                                            },
                                            "price": {
                                                "type": "number"
                                            },
                                            "created_at": {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            "city": {
                                                "type": "string"
                                            },
                                            "country": {
                                                "type": "string"
                                            },
                                            "images": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                }
                                            },
                                            "wishlist": {
                                                "type": "boolean"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/listings/category/{category_id}": {
            "get": {
                "tags": [
                    "Listings"
                ],
                "summary": "Get listings by category",
                "operationId": "4f9bae544c11de258830044f0b72fbd4",
                "parameters": [
                    {
                        "name": "category_id",
                        "in": "path",
                        "description": "Category ID (1=Motorcycle, 2=SparePart, 3=LicensePlate)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of listings",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer"
                                            },
                                            "title": {
                                                "type": "string"
                                            },
                                            "description": {
                                                "type": "string"
                                            },
                                            "price": {
                                                "type": "number"
                                            },
                                            "created_at": {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            "city": {
                                                "type": "string"
                                            },
                                            "country": {
                                                "type": "string"
                                            },
                                            "images": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                }
                                            },
                                            "wishlist": {
                                                "type": "boolean"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/listings/city/{city_id}": {
            "get": {
                "tags": [
                    "Listings"
                ],
                "summary": "Get listings by city",
                "operationId": "43b58e1b7294348aaca05f3293481cd0",
                "parameters": [
                    {
                        "name": "city_id",
                        "in": "path",
                        "description": "City ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of listings",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer"
                                            },
                                            "title": {
                                                "type": "string"
                                            },
                                            "description": {
                                                "type": "string"
                                            },
                                            "price": {
                                                "type": "number"
                                            },
                                            "created_at": {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            "city": {
                                                "type": "string"
                                            },
                                            "country": {
                                                "type": "string"
                                            },
                                            "images": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                }
                                            },
                                            "wishlist": {
                                                "type": "boolean"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/listings/filter": {
            "get": {
                "tags": [
                    "Listings"
                ],
                "summary": "Filter listings",
                "operationId": "47ab8489cc4860d88d2cf929c47b4f47",
                "parameters": [
                    {
                        "name": "city_id",
                        "in": "query",
                        "description": "City ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "country_id",
                        "in": "query",
                        "description": "Country ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "category_id",
                        "in": "query",
                        "description": "Category ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Filtered listings",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer"
                                            },
                                            "title": {
                                                "type": "string"
                                            },
                                            "description": {
                                                "type": "string"
                                            },
                                            "price": {
                                                "type": "number"
                                            },
                                            "created_at": {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            "city": {
                                                "type": "string"
                                            },
                                            "country": {
                                                "type": "string"
                                            },
                                            "images": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                }
                                            },
                                            "wishlist": {
                                                "type": "boolean"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/listings/latest/{city_id}": {
            "get": {
                "tags": [
                    "Listings"
                ],
                "summary": "Get latest listings by city",
                "operationId": "0d472ecc656be8404204a3975a20ffac",
                "parameters": [
                    {
                        "name": "city_id",
                        "in": "path",
                        "description": "City ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Latest 10 listings",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer"
                                            },
                                            "title": {
                                                "type": "string"
                                            },
                                            "description": {
                                                "type": "string"
                                            },
                                            "price": {
                                                "type": "number"
                                            },
                                            "created_at": {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            "city": {
                                                "type": "string"
                                            },
                                            "country": {
                                                "type": "string"
                                            },
                                            "images": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                }
                                            },
                                            "wishlist": {
                                                "type": "boolean"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/listings/{id}": {
            "get": {
                "tags": [
                    "Listings"
                ],
                "summary": "Get listing by ID",
                "operationId": "b905f326db31dcc60e5f3cc2a1ad05d2",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Listing ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Listing details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "title": {
                                            "type": "string"
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "price": {
                                            "type": "number"
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "city": {
                                            "type": "string"
                                        },
                                        "country": {
                                            "type": "string"
                                        },
                                        "images": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "wishlist": {
                                            "type": "boolean"
                                        },
                                        "category_id": {
                                            "type": "integer"
                                        },
                                        "motorcycle": {
                                            "properties": {
                                                "engine": {
                                                    "type": "string"
                                                },
                                                "mileage": {
                                                    "type": "integer"
                                                },
                                                "body_condition": {
                                                    "type": "string"
                                                },
                                                "modified": {
                                                    "type": "boolean"
                                                },
                                                "insurance": {
                                                    "type": "boolean"
                                                },
                                                "general_condition": {
                                                    "type": "string"
                                                },
                                                "vehicle_care": {
                                                    "type": "string"
                                                },
                                                "transmission": {
                                                    "type": "string"
                                                },
                                                "brand": {
                                                    "type": "string"
                                                },
                                                "model": {
                                                    "type": "string"
                                                },
                                                "year": {
                                                    "type": "integer"
                                                },
                                                "type": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object",
                                            "nullable": true
                                        },
                                        "license_plate": {
                                            "properties": {
                                                "characters": {
                                                    "type": "string"
                                                },
                                                "digits_count": {
                                                    "type": "integer"
                                                },
                                                "country_id": {
                                                    "type": "integer"
                                                },
                                                "type": {
                                                    "type": "string"
                                                },
                                                "color": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object",
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Listing not found"
                    }
                }
            }
        },
        "/api/my-listing": {
            "get": {
                "tags": [
                    "Listings"
                ],
                "summary": "Récupérer les annonces de l'utilisateur connecté avec les détails selon la catégorie",
                "operationId": "c45df03a980317ef861e77628c045275",
                "responses": {
                    "200": {
                        "description": "Liste des annonces de l'utilisateur",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/pricing": {
            "get": {
                "tags": [
                    "Listings"
                ],
                "summary": "Get price by model ID",
                "operationId": "e446d6e3b1cbe8818ae9407bb62572dd",
                "parameters": [
                    {
                        "name": "model_id",
                        "in": "query",
                        "description": "Model ID",
                        "required": true
                    },
                    {
                        "name": "category_id",
                        "in": "query",
                        "description": "Category ID",
                        "required": true
                    },
                    {
                        "name": "country_id",
                        "in": "query",
                        "description": "Country ID",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Price details"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/motorcycle-brands/listing-count": {
            "get": {
                "tags": [
                    "Listings"
                ],
                "summary": "Get motorcycle brands with listing count",
                "operationId": "d9f8f2cd6763ceb51457d6ce5fed8372",
                "responses": {
                    "200": {
                        "description": "List of motorcycle brands with their listing counts",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer"
                                            },
                                            "name": {
                                                "type": "string"
                                            },
                                            "listings_count": {
                                                "type": "integer"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/categories/{categoryId}/price-range": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Get price range for a specific category",
                "description": "Retrieve minimum and maximum prices for listings in a specific category",
                "operationId": "9d0c2313a78a00f1e15527063f450cce",
                "parameters": [
                    {
                        "name": "categoryId",
                        "in": "path",
                        "description": "Category ID (1=Motorcycle, 2=SparePart, 3=LicensePlate)",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "enum": [
                                1,
                                2,
                                3
                            ],
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Price range retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Price range retrieved successfully"
                                        },
                                        "category_id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "min_price": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 5000
                                        },
                                        "max_price": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 25000
                                        },
                                        "total_listings": {
                                            "type": "integer",
                                            "example": 45
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid category ID",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid category_id. Only categories 1, 2, or 3 are allowed."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Failed to retrieve price range"
                                        },
                                        "details": {
                                            "type": "string",
                                            "example": "Database connection failed"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/locations": {
            "get": {
                "tags": [
                    "locations"
                ],
                "summary": "display all countries and cities",
                "description": "Get all countries and cities",
                "operationId": "getLocations",
                "parameters": [
                    {
                        "name": "country_id",
                        "in": "query",
                        "description": "ID of the country to filter cities",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "city_id",
                        "in": "query",
                        "description": "ID of the city to filter countries",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "countries": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "code": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "cities": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "country_id": {
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "This action is unauthorized."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Resource not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "servers": [
                    {
                        "url": "http://localhost:8000",
                        "description": "Local server"
                    },
                    {
                        "url": "https://api.example.com",
                        "description": "Production server"
                    },
                    {
                        "url": "https://staging.api.example.com",
                        "description": "Staging server"
                    },
                    {
                        "url": "https://dev.api.example.com",
                        "description": "Development server"
                    }
                ]
            }
        },
        "/api/countries": {
            "post": {
                "tags": [
                    "locations"
                ],
                "summary": "Create a new country",
                "description": "Store a new country",
                "operationId": "storeCountry",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "France"
                                    },
                                    "code": {
                                        "type": "string",
                                        "example": "FR"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Country created successfully"
                    }
                }
            }
        },
        "/api/countries/{id}": {
            "put": {
                "tags": [
                    "locations"
                ],
                "summary": "Update a country",
                "description": "Update a country by ID",
                "operationId": "updateCountry",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the country to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "France"
                                    },
                                    "code": {
                                        "type": "string",
                                        "example": "FR"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Country updated successfully"
                    }
                }
            },
            "delete": {
                "tags": [
                    "locations"
                ],
                "summary": "Delete a country",
                "description": "Delete a country by ID",
                "operationId": "destroyCountry",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the country to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Country deleted successfully"
                    }
                }
            }
        },
        "/api/cities": {
            "post": {
                "tags": [
                    "locations"
                ],
                "summary": "Create a new city",
                "description": "Store a new city",
                "operationId": "storeCity",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "country_id"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Paris"
                                    },
                                    "country_id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "City created successfully"
                    }
                }
            }
        },
        "/api/cities/{id}": {
            "put": {
                "tags": [
                    "locations"
                ],
                "summary": "Update a city",
                "description": "Update a city by ID",
                "operationId": "updateCity",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the city to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "country_id"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Lyon"
                                    },
                                    "country_id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "City updated successfully"
                    }
                }
            },
            "delete": {
                "tags": [
                    "locations"
                ],
                "summary": "Delete a city",
                "description": "Delete a city by ID",
                "operationId": "destroyCity",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the city to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "City deleted successfully"
                    }
                }
            }
        },
        "/api/motorcycle-brands": {
            "get": {
                "tags": [
                    "Motorcycle Brands"
                ],
                "summary": "Get all motorcycle brands",
                "operationId": "ecf4810f772f5ef0f46e563ff8ea5a3d",
                "responses": {
                    "200": {
                        "description": "List of motorcycle brands"
                    }
                }
            },
            "post": {
                "tags": [
                    "Motorcycle Brands"
                ],
                "summary": "Create a new motorcycle brand",
                "operationId": "ca62f9a53aae429317a0d555db0db234",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Honda"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Motorcycle brand created"
                    }
                }
            }
        },
        "/api/motorcycle-brands/{id}": {
            "get": {
                "tags": [
                    "Motorcycle Brands"
                ],
                "summary": "Get a motorcycle brand by ID",
                "operationId": "4353d4620781aea0f89414d16ba72e0f",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Motorcycle brand data"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Motorcycle Brands"
                ],
                "summary": "Update a motorcycle brand",
                "operationId": "07d7155dc636ccf7569dd392a5d4e404",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Yamaha"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Motorcycle brand updated"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Motorcycle Brands"
                ],
                "summary": "Delete a motorcycle brand",
                "operationId": "bb9a49f49175528d85d778649c2fc2f5",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Motorcycle brand deleted successfully"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/api/motorcycles": {
            "get": {
                "tags": [
                    "Motorcycles"
                ],
                "summary": "Get all motorcycles",
                "operationId": "c0f4e4f3a808887d946e4cc85a622b96",
                "responses": {
                    "200": {
                        "description": "List of motorcycles"
                    }
                }
            },
            "post": {
                "tags": [
                    "Motorcycles"
                ],
                "summary": "Create a new motorcycle",
                "operationId": "94a6589d128340e0e630959bfce11074",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "brand_id",
                                    "model_id",
                                    "year_id",
                                    "color"
                                ],
                                "properties": {
                                    "brand_id": {
                                        "type": "integer"
                                    },
                                    "model_id": {
                                        "type": "integer"
                                    },
                                    "year_id": {
                                        "type": "integer"
                                    },
                                    "color": {
                                        "type": "string",
                                        "example": "Red"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Motorcycle created"
                    }
                }
            }
        },
        "/api/motorcycles/{id}": {
            "get": {
                "tags": [
                    "Motorcycles"
                ],
                "summary": "Get a motorcycle by ID",
                "operationId": "edbfbe97c12800775c8e6f5479e9fbff",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Motorcycle data"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Motorcycles"
                ],
                "summary": "Update a motorcycle",
                "operationId": "51d631f35a9d36781f427b8dee84618e",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "brand_id",
                                    "model_id",
                                    "year_id",
                                    "color"
                                ],
                                "properties": {
                                    "brand_id": {
                                        "type": "integer"
                                    },
                                    "model_id": {
                                        "type": "integer"
                                    },
                                    "year_id": {
                                        "type": "integer"
                                    },
                                    "color": {
                                        "type": "string",
                                        "example": "Black"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Motorcycle updated"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Motorcycles"
                ],
                "summary": "Delete a motorcycle",
                "operationId": "380bb8e8e4e201f4304b027a4c56adcc",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Deleted"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/api/motorcycle/filter": {
            "get": {
                "tags": [
                    "Motorcycle"
                ],
                "summary": "Filter motorcycles by brand, model, or year",
                "operationId": "c274bcf7ca88c37d9bb4d690cc456e04",
                "parameters": [
                    {
                        "name": "brand_id",
                        "in": "query",
                        "description": "Filter by brand ID",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "model_id",
                        "in": "query",
                        "description": "Filter by model ID",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 2
                        }
                    },
                    {
                        "name": "year",
                        "in": "query",
                        "description": "Filter by year",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 2022
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful filtering",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "brands": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "Honda"
                                                            },
                                                            "created_at": {
                                                                "type": "string",
                                                                "format": "date-time"
                                                            },
                                                            "updated_at": {
                                                                "type": "string",
                                                                "format": "date-time"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "models": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 2
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "CBR500R"
                                                            },
                                                            "brand_id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "brand_name": {
                                                                "type": "string",
                                                                "example": "Honda"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "years": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 3
                                                            },
                                                            "year": {
                                                                "type": "integer",
                                                                "example": 2022
                                                            },
                                                            "model_id": {
                                                                "type": "integer",
                                                                "example": 2
                                                            },
                                                            "model_name": {
                                                                "type": "string",
                                                                "example": "CBR500R"
                                                            },
                                                            "brand_id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "brand_name": {
                                                                "type": "string",
                                                                "example": "Honda"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/motorcycle-models": {
            "get": {
                "tags": [
                    "Motorcycle Models"
                ],
                "summary": "Get all motorcycle models",
                "operationId": "9cf26095369c0a1f24ccdc59eb5e8e8f",
                "responses": {
                    "200": {
                        "description": "List of motorcycle models"
                    }
                }
            },
            "post": {
                "tags": [
                    "Motorcycle Models"
                ],
                "summary": "Create a new motorcycle model",
                "operationId": "348e2a1f71de4990c263a894b77438d4",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "brand_id",
                                    "name",
                                    "type_id"
                                ],
                                "properties": {
                                    "brand_id": {
                                        "type": "integer"
                                    },
                                    "name": {
                                        "type": "string",
                                        "example": "CBR600RR"
                                    },
                                    "type_id": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Motorcycle model created"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/motorcycle-models/{id}": {
            "get": {
                "tags": [
                    "Motorcycle Models"
                ],
                "summary": "Get a motorcycle model by ID",
                "operationId": "46db16be3a19f6d3906d8c279c984480",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Motorcycle model data"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Motorcycle Models"
                ],
                "summary": "Update a motorcycle model",
                "operationId": "b8d3d0d6c6d3dafb99f779cc7ee53fd7",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "brand_id",
                                    "name",
                                    "type_id"
                                ],
                                "properties": {
                                    "brand_id": {
                                        "type": "integer"
                                    },
                                    "name": {
                                        "type": "string",
                                        "example": "MT-07"
                                    },
                                    "type_id": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Motorcycle model updated"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Motorcycle Models"
                ],
                "summary": "Delete a motorcycle model",
                "operationId": "66a3f0979775886a398e833255b2b2e3",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Deleted"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/api/motorcycle-types": {
            "get": {
                "tags": [
                    "Motorcycle Types"
                ],
                "summary": "Get all motorcycle types",
                "operationId": "297a51041d61f5f3f541a47f0193a7cc",
                "responses": {
                    "200": {
                        "description": "List of motorcycle types or no data"
                    }
                }
            },
            "post": {
                "tags": [
                    "Motorcycle Types"
                ],
                "summary": "Create a new motorcycle type",
                "operationId": "7ad0d99989baeb77ed42f540f0f9180d",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Sport"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Motorcycle type created successfully"
                    }
                }
            }
        },
        "/api/motorcycle-types/{id}": {
            "get": {
                "tags": [
                    "Motorcycle Types"
                ],
                "summary": "Get a motorcycle type by ID",
                "operationId": "b0d8d440778b00f40145cac0d48582cf",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Motorcycle type data"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Motorcycle Types"
                ],
                "summary": "Update a motorcycle type",
                "operationId": "5271c1e7521208c1d4922ca3050335d5",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Cruiser"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Motorcycle type updated successfully"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Motorcycle Types"
                ],
                "summary": "Delete a motorcycle type",
                "operationId": "f7228e3cb76ec733860fd962dd073913",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Motorcycle type deleted successfully"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/api/motorcycle-years": {
            "get": {
                "tags": [
                    "Motorcycle Years"
                ],
                "summary": "Get all motorcycle years",
                "operationId": "341e8e6f23ee659e345ec02d77ffb7e9",
                "responses": {
                    "200": {
                        "description": "List of motorcycle years"
                    }
                }
            },
            "post": {
                "tags": [
                    "Motorcycle Years"
                ],
                "summary": "Create a new motorcycle year",
                "operationId": "7a8fb72eb322da9dd6050001bae9202c",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "year"
                                ],
                                "properties": {
                                    "year": {
                                        "type": "integer",
                                        "example": 2024
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Motorcycle year created"
                    }
                }
            }
        },
        "/api/motorcycle-years/{id}": {
            "get": {
                "tags": [
                    "Motorcycle Years"
                ],
                "summary": "Get a motorcycle year by ID",
                "operationId": "9c6d31e9a81d04ae7368a2383d43aaf8",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Motorcycle year data"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Motorcycle Years"
                ],
                "summary": "Update a motorcycle year",
                "operationId": "66699870e0fd7df9d075334cf3f5b8d1",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "year"
                                ],
                                "properties": {
                                    "year": {
                                        "type": "integer",
                                        "example": 2025
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Motorcycle year updated"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Motorcycle Years"
                ],
                "summary": "Delete a motorcycle year",
                "operationId": "5568e4b4440ea6a005c2cce8c74bfdce",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Deleted"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/api/check-promo": {
            "post": {
                "tags": [
                    "Promo Codes"
                ],
                "summary": "Check promo code validity and calculate discount",
                "description": "Validates a promo code and calculates the new price after applying the discount.",
                "operationId": "checkPromo",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "code",
                                    "total_price"
                                ],
                                "properties": {
                                    "code": {
                                        "type": "string",
                                        "example": "WELCOME10"
                                    },
                                    "total_price": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 100
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Promo code is valid and discount applied",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "old_price": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 100
                                        },
                                        "new_price": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 80
                                        },
                                        "discount": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 20
                                        },
                                        "discount_type": {
                                            "type": "string",
                                            "example": "percentage"
                                        },
                                        "discount_value": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 20
                                        },
                                        "description": {
                                            "type": "string",
                                            "example": "20% off on your next purchase"
                                        },
                                        "usage_count": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "total_usage_count": {
                                            "type": "integer",
                                            "example": 10
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Promo code is not valid (time, price, usage limit)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Promo code is not valid at this time."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Promo code not found or inactive",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Promo code not found or inactive."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "code": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The code field is required."
                                                    }
                                                },
                                                "total_price": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The total price must be at least 0."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/roles": {
            "get": {
                "tags": [
                    "Roles"
                ],
                "summary": "Get all roles",
                "operationId": "77e3636d8592997ce9d6d27b50857a69",
                "responses": {
                    "200": {
                        "description": "List of roles",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "name": {
                                                "type": "string",
                                                "example": "admin"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Roles"
                ],
                "summary": "Create a new role",
                "operationId": "4a563842fbfcad237f63da43065fca3d",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "manager"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Role created"
                    }
                }
            }
        },
        "/api/roles/{id}": {
            "get": {
                "tags": [
                    "Roles"
                ],
                "summary": "Get a role by ID",
                "operationId": "7fb0667a295b7678a30353aa11739683",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Role found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "admin"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Role not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Roles"
                ],
                "summary": "Update a role",
                "operationId": "786d6990093a8eb3a56931f19a827e43",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "admin_updated"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Role updated"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Roles"
                ],
                "summary": "Delete a role",
                "operationId": "8285c46981c60ad600aa4077307aec04",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Role deleted"
                    }
                }
            }
        },
        "/api/users": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get list of users",
                "operationId": "c457726701591d1183b53aa71fc13441",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved list of users"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Create a new user",
                "operationId": "592819a0265360b2014512d6dbfaf0e7",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "first_name",
                                    "last_name",
                                    "email",
                                    "role_id"
                                ],
                                "properties": {
                                    "first_name": {
                                        "type": "string"
                                    },
                                    "last_name": {
                                        "type": "string"
                                    },
                                    "email": {
                                        "type": "string"
                                    },
                                    "phone": {
                                        "type": "string"
                                    },
                                    "birthday": {
                                        "type": "string",
                                        "format": "date"
                                    },
                                    "gender": {
                                        "type": "string"
                                    },
                                    "profile_picture": {
                                        "type": "string"
                                    },
                                    "address": {
                                        "type": "string"
                                    },
                                    "postal_code": {
                                        "type": "string"
                                    },
                                    "role_id": {
                                        "type": "integer"
                                    },
                                    "country_id": {
                                        "type": "integer"
                                    },
                                    "language": {
                                        "type": "string"
                                    },
                                    "timezone": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User created successfully"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/users/{id}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get user by ID",
                "operationId": "36a33ff774d5cba33c039dec2c3e0287",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the user",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved user"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Update user details",
                "operationId": "b9091397c8b25f12c6adb74be6ce3a5a",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the user",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "first_name": {
                                        "type": "string"
                                    },
                                    "last_name": {
                                        "type": "string"
                                    },
                                    "email": {
                                        "type": "string"
                                    },
                                    "phone": {
                                        "type": "string"
                                    },
                                    "birthday": {
                                        "type": "string",
                                        "format": "date"
                                    },
                                    "gender": {
                                        "type": "string"
                                    },
                                    "profile_picture": {
                                        "type": "string"
                                    },
                                    "address": {
                                        "type": "string"
                                    },
                                    "postal_code": {
                                        "type": "string"
                                    },
                                    "role_id": {
                                        "type": "integer"
                                    },
                                    "country_id": {
                                        "type": "integer"
                                    },
                                    "language": {
                                        "type": "string"
                                    },
                                    "timezone": {
                                        "type": "string"
                                    },
                                    "is_active": {
                                        "type": "boolean"
                                    },
                                    "is_online": {
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User updated successfully"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Users"
                ],
                "summary": "Delete a user",
                "operationId": "fa56cffde745d3f152f95cbacd936c0b",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the user",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User deleted successfully"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/wishlists": {
            "get": {
                "tags": [
                    "Wishlist"
                ],
                "summary": "Get all wishlists",
                "operationId": "978401ca2ca07b592255725cd25a443d",
                "responses": {
                    "200": {
                        "description": "List of wishlists"
                    }
                }
            },
            "post": {
                "tags": [
                    "Wishlist"
                ],
                "summary": "Add listing to wishlist (auth required)",
                "operationId": "4bdf63de7775026077073b1069c45f64",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "listing_id"
                                ],
                                "properties": {
                                    "listing_id": {
                                        "type": "integer",
                                        "example": 5
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Added to wishlist"
                    },
                    "409": {
                        "description": "Already in wishlist"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/wishlists/{id}": {
            "get": {
                "tags": [
                    "Wishlist"
                ],
                "summary": "Get a wishlist by ID",
                "operationId": "b3cf1f24ca007a63db3f93f3e5e824d1",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Wishlist details"
                    },
                    "404": {
                        "description": "Wishlist not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Wishlist"
                ],
                "summary": "Update a wishlist",
                "operationId": "d716f58b19d41444916708b6e9eac2c2",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "user_id": {
                                        "type": "integer"
                                    },
                                    "listing_id": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Wishlist updated"
                    }
                }
            }
        },
        "/api/wishlists/{listing_id}": {
            "delete": {
                "tags": [
                    "Wishlist"
                ],
                "summary": "Remove listing from wishlist (auth required)",
                "operationId": "d9775cef34325e32f1d6dc67aa11e4ac",
                "parameters": [
                    {
                        "name": "listing_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Removed from wishlist"
                    },
                    "404": {
                        "description": "Wishlist item not found"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "BankCard": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "user_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "card_number": {
                        "type": "string",
                        "example": "**** **** **** 1234"
                    },
                    "card_holder_name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "expiration_date": {
                        "type": "string",
                        "format": "date",
                        "example": "2025-12-31"
                    },
                    "cvv": {
                        "type": "string",
                        "example": "***"
                    },
                    "card_type_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "is_default": {
                        "type": "boolean",
                        "example": true
                    },
                    "BankCardType": {
                        "properties": {
                            "id": {
                                "type": "integer",
                                "example": 1
                            },
                            "name": {
                                "type": "string",
                                "example": "Visa"
                            },
                            "description": {
                                "type": "string",
                                "example": "Standard Visa Card"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            }
        }
    },
    "tags": [
        {
            "name": "Bike Part Brands",
            "description": "API Endpoints for managing bike part brands"
        },
        {
            "name": "Motorcycle Brands"
        },
        {
            "name": "Motorcycles"
        },
        {
            "name": "Motorcycle Models"
        },
        {
            "name": "Motorcycle Types"
        },
        {
            "name": "Motorcycle Years"
        },
        {
            "name": "Wishlist",
            "description": "Operations related to wishlists"
        },
        {
            "name": "Authentification",
            "description": "Authentification"
        },
        {
            "name": "Bike Part Categories",
            "description": "Bike Part Categories"
        },
        {
            "name": "BankCards",
            "description": "BankCards"
        },
        {
            "name": "Card Types",
            "description": "Card Types"
        },
        {
            "name": "Categories",
            "description": "Categories"
        },
        {
            "name": "Colors",
            "description": "Colors"
        },
        {
            "name": "Image Upload",
            "description": "Image Upload"
        },
        {
            "name": "Listings",
            "description": "Listings"
        },
        {
            "name": "locations",
            "description": "locations"
        },
        {
            "name": "Motorcycle",
            "description": "Motorcycle"
        },
        {
            "name": "Promo Codes",
            "description": "Promo Codes"
        },
        {
            "name": "Roles",
            "description": "Roles"
        },
        {
            "name": "Users",
            "description": "Users"
        }
    ]
}